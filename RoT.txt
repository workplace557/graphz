#include <stdio.h>
#include <graphics.h>
#include <math.h>

#define PI 3.14159265

void drawTriangle(int x1, int y1, int x2, int y2, int x3, int y3) {
    line(x1, y1, x2, y2);
    line(x2, y2, x3, y3);
    line(x3, y3, x1, y1);
}

void rotatePoint(int *x, int *y, int cx, int cy, float angle) {
    float radians = angle * (PI / 180.0);
    float cosTheta = cos(radians);
    float sinTheta = sin(radians);

    int newX = round((float)(*x - cx) * cosTheta - (float)(*y - cy) * sinTheta) + cx;
    int newY = round((float)(*x - cx) * sinTheta + (float)(*y - cy) * cosTheta) + cy;

    *x = newX;
    *y = newY;
}
int main() {
    //int gd = DETECT, gm;
    //initgraph(&gd, &gm, "");

    // Coordinates of the triangle
    /*int x1 = 100, y1 = 100;
    int x2 = 200, y2 = 200;
    int x3 = 150, y3 = 300;*/
    
    int x1,y1,x2,y2,x3,y3;
    printf("Enter coordinate of vertex 1: ");
    scanf("%d%d",&x1,&y1);
    printf("Enter coordinate of vertex 2: ");
    scanf("%d%d",&x2,&y2);
    printf("Enter coordinate of vertex 3: ");
    scanf("%d%d",&x3,&y3);
    
    // Rotation angle in degrees
    //float angle = 45.0;
    
    float angle;
    printf("Enter the angle: ");
    scanf("%f",&angle);
    
    initwindow(600,600);

    // Draw original triangle
    drawTriangle(x1, y1, x2, y2, x3, y3);
    
    // Center of rotation (centroid)
    int cx = (x1 + x2 + x3) / 3;
    int cy = (y1 + y2 + y3) / 3;

    // Rotate each point of the triangle
    rotatePoint(&x1, &y1, cx, cy, angle);
    rotatePoint(&x2, &y2, cx, cy, angle);
    rotatePoint(&x3, &y3, cx, cy, angle);

    // Draw rotated triangle
    drawTriangle(x1, y1, x2, y2, x3, y3);

    getch();
    closegraph();
    return 0;
}